1.判斷字串是否是數字 :
    String.char().allMathch(Character::isDigit);

2.HttpServlet -> req + java8 
    req.getParameterMap().entrySet().forEach(e -> out.print(e.getKey() +"="+ Arrays.toString(e.getValue())));

3.java(讀取圖片) -> html (讀取圖片 -> 接收 resp 的 OutPutStream -> Files(圖片來源端, 目的端))
    File file = new File("圖片位置"); // 讀取圖片
	ServletOutputStream out = resp.getOutputStream();
	Files.copy(file.toPath(), out); // (圖片來源端, 目的端)
	out.close();

*. 拋出不支援功能例外 : throw new UnsupportedOperationException();
    範例 : 
    
	interface MyPhone{
	// 功能
	void dial(String number);
	void camera();
	void watch(); 
    }
    
    // 復古電話
    class OldPhone implements MyPhone{

	@Override
	public void dial(String number) {
		 System.out.println("電話號碼" + number);
	}

	@Override
	public void camera() {
	     throw new UnsupportedOperationException("無拍照功能");
	}

	@Override
	public void watch() {
		 throw new UnsupportedOperationException("無觀看影片功能");
	}
	
}

4. Java 讀取檔案(FileReader) 
     讀取檔案       : FileReader inputStreamFile = new FileReader("位置");
	 將讀取內容     : BufferedReader br = new BufferedReader(inputStreamFile);
	 讀取檔案的內容串流文字 : String input = br.readLine();
	 將輸入轉串流   : DataInputStream in = new DataInputStream(System.in);
	 範例猜數字 : 
	 public class hw1 {
     // 主程式執行 
     public static void main(String[] args) {
      // 例外處理
	  try {
      // 讀取檔案(檔案放你 input.txt 位置)
      FileReader inputStreamFile = new FileReader("C:\\Users\\vic\\git\\repositoryWebHome\\JavaWeb-20220803\\src\\main\\java\\service\\input.txt");
  	  // 讀取文件
      BufferedReader br = new BufferedReader(inputStreamFile);
      // 讀取檔案的串流文字
      String input = br.readLine();
      // 將 string 轉 int
      int start = Integer.parseInt(input);
      // 換行讀取
      input = br.readLine();
      // 將 string 轉 int
      int end = Integer.parseInt(input);
      // 換行讀取
      input = br.readLine();
      // 將 string 轉 int
      int ans = Integer.parseInt(input);
      // 關閉串流
      br.close();
      // 將訊息顯示於 console
      System.out.println("請輸入數字在" + 
          start + " 和 " + end + "之間");
      // DataInputStream :數據輸入流用於在數據輸出流
      // System.in 為鍵盤輸入
      // new 是宣告一個物件使用
      // 物件類型 名稱 = new 物件類型();
      DataInputStream in = new DataInputStream(System.in);
      // 讀取輸入的串流文字
      input = in.readLine();
      // 將 string 轉 int 
      int userinput = Integer.parseInt(input);
      // 當輸入數字不等於答案時
      while (userinput != ans) {
    	// 條件 
        if (userinput >= end || userinput <= start) {
          // 將訊息顯示於 console
          System.out.println("輸入數字不符合範圍" + start + "~" + end);
          // 將訊息顯示於 console
          System.out.println("請再次輸入");
          // 再次讀取輸入的串流文字
          input = in.readLine();
          // 將 string 轉 int
          userinput = Integer.parseInt(input);
          // 結束當前迴圈，並進入下一次迴圈(if (userinput > ans))
          continue;
        } 
        // 判斷迴圈
        if (userinput > ans) {
          // 指向新的數字
          end = userinput;
        } else {
          // 指向新的數字
          start = userinput;
        } 
        System.out.println("提示範圍 " + 
            start + " 和 " + end);
        // 再次讀取輸入的串流文字(輸入一次就要再次讀取) 
        input = in.readLine();
        // 將 string 轉 int
        userinput = Integer.parseInt(input);
      } 
      System.out.println("答對");
    } catch (IOException iOException) {}
  }
}

	
	
    
 