開發工具 : sts4(SpringBoot)
練習     : Jpa + validation + thymeleaf + web 
DB       : mysql

前端目錄 : resources -> static
                     -> templates -> include -> header/footer/navbar
                                  -> index.html

後端目錄 : com.study.springmvc.contoller
                               entity
							   repository
							   validator	

進度(9/13) : index + header + footer + Department + Employee
進度(9/17) : supplier + product(line 傳送訊息) + purchase +防止刪除機制

-------------------------------------------------------------------------------------------------------------------
重要 : <input type="hidden" th:field="*{id}" /> // 讓綁定物件取得 id


-------------------------------------------------------------------------------------------------------------------
thymeleaf 外掛 :
 1. thymeleaf : <html xmlns:th="http://www.thymeleaf.org">

thymeleaf 功能 :
 1. header 和 footer 標籤設定 : <header/footer xmlns:th="http://www.thymeleaf.org" th:fragment="header/footer">
 2. 插入 header/footer : <div th:include="html名稱 :: 標籤名稱"></div>
 3. 圖片掛入 :  <img class="img-fluid" th:src="@{/image/psi_table.png}">
 4. 錯誤訊息 :  <span class="fieldError" th:if="${#fields.hasErrors('*{name}')}" th:errors="*{name}"></span>
 5. JS 取得 thymeleaf 值 :  // 用於專案刪除提醒
      <script th:inline="javascript">
        var message = /*[[${message}]]*/ // 此行
        console.log(message);
        if(message != null){
    	  alert(message);
        }
      </script> 

 6. thymeleaf 取得 list 數量 : ${#lists.size()} // 配合 thymeleaf switch 顯示員工
 
 7. thymeleaf switch : * 為預設
      <span  th:switch="${#lists.size(dept.employees)}">
        <span th:case="0">此員工尚有部門</span>
         <span th:case="*">
          <span th:each="e:${dept.employees}">
           <a th:href="@{/employee/{id}(id=${e.id})}" th:text="${e.name}"></a>
          </span>
         </span>
      </span> 
 
 8. href 配合 onclick : onclick="var del = (confirm('確定要刪除嗎?')); return del" th:href="@{}" 

 9. th:utext // 可使用 html 標籤
 
 10. 日期format : th:value="${#dates.format(#dates.createNow(), 'yyyy-MM-dd')}"
 
 11. googleChar :
      var data = google.visualization.arrayToDataTable([ // 固定
        ['Name', '進貨量'],                           // key and Value
        
        /*[# th:each="row : ${inventories}"]*/
        
        ['[[${row.name}]]', [[${row.amount1}]]],
        
        /*[/]*/
       ]);		
-------------------------------------------------------------------------------------------------------------------
前端實作注意:
 1. index.html -> 圖片配合 css -> <img class="img-responsive" th:src="@{/image/psi_table.png}">
                    <style type="text/css">
		              .img-responsive {
		              display: block;
		              height: auto;
		              max-width: 100%;
		                              }
	                </style> 

 2. <form class = "form-horizontal"> -> <div class="form-group"> -> <input class="form-control">  
    <select class="form-control select2"> 
	
 3. 錯誤訊息 -> 配合 css -> <span class="fieldError" th:if="${#fields.hasErrors('*{name}')}" th:errors="*{name}"></span>
                  <style type="text/css">
	                .fieldError{color: red;}
                  </style> 
 4. table class : <table border="1" class="table table-striped table-responsive-md">	

 5. JS 取得 thymeleaf 值 :  // 用於專案刪除提醒
      <script th:inline="javascript">
        var message = /*[[${message}]]*/ // 此行
        console.log(message);
        if(message != null){
    	  alert(message);
        }
      </script> 

 6. thymeleaf 取得 list 數量 : ${#lists.size()} // 配合 thymeleaf switch 顯示員工
 
 7. thymeleaf switch : * 為預設
      <span  th:switch="${#lists.size(dept.employees)}">
        <span th:case="0">此員工尚有部門</span>
         <span th:case="*">
          <span th:each="e:${dept.employees}">
           <a th:href="@{/employee/{id}(id=${e.id})}" th:text="${e.name}"></a>
          </span>
         </span>
      </span> 

 8. redirect -> RedirectAttributesModelMap modelMap -> addFlashAttribute // 成功刪除提示	  

 9. 下拉選單   ->
       <label style="font-size: 20px;">部門名稱 :</label>
       <select class="form-control select2" th:field="*{department.id}" id="department.id">
		  <option th:each="d:${departments}" th:value="${d.id}" th:text="${d.name}"></option>
	   </select> 
 
 10. orderItem / purchaseItem 部分表單部分要加此行因是 主檔的明細新增(add 路徑 : /{oid}/item) : 
       <input type="text" readonly="readonly" th:field="*{id}" class="form-control">
 
 11. 全錯誤訊息顯示 : 
       <div class="alert alert-danger" th:if="${#fields.hasErrors('*')}"><p th:each="err : ${#fields.errors('*')}" th:text="${err}"></p>
 
 12. 日期記得綁定
 
 

-------------------------------------------------------------------------------------------------------------------
後端實作注意:
1. Line 傳送 = service(HttpPostMultipart + LineNotify)   
   參考網站:https://github.com/w96352509/20220905PSI/blob/master/SpringBoot-PSI/src/main/java/com/example/demo/service/LineNotify.java

2. PurchaseItem 與 OrderItem 路徑配置參考(備註是直接透過 主單取得細目 不會直接呼叫細部 ) :
     2-1. :  
	 
     
     /* 採購主檔
      * --------------------------------------------------------------------
      * GET  -> /            -> index
      * GET  -> /{id}        -> get
	  * GET  -> /delete/{id} -> delete
	  * POST -> /            -> add
	  * PUT  -> /            -> update
		----------------------------------------------------------------------
      * 採購細目
	  * --------------------------------------------------------------------
	  * GET  -> /{pid}/item              -> indexItem
	  * GET  -> /{pid}/item/{iid}        -> getItem
      * GET  -> /{pid}/item/delete/{iid} -> deleteItem
	  * POST -> /{pid}/item              -> addItem
	  * PUT  -> /{pid}/item              -> updateItem
        ---------------------------------------------------------------------*/

3. view 建立 -> interface Inventory : 用於取得商品各內容
     Long getId();
	 String getName();
	 Integer getCost();
	 Integer getPrice();
	 Integer getAmount1();  // 進貨數量
	 Integer getAmount2();  // 銷售數量

4. product 使用自訂 Query : 
     - List<Inventory> queryInventories();   // 尋找全商品的資訊 + 進貨數量 + 銷售數量
     - Inventory findInventoryById(Long id); // 商品的資訊 + 進貨數量 + 銷售數量 by id
	 - sql : select p.id , p.name , p.cost , p.price ,
	        (select sum(amount) form purchase_item WHERE product_id = p.id limit 1 ) as amount1 ,
	        (select sum(amount) form order_item    WHERE product_id = p.id limit 1)  as amount2 ,
			 FROM product p (where p.id=:id)
	 
 
5. InventoryValidator (配合 OrderItem 購買比對 PurchaseItem ) 
     - implements Validator(springframework.validation.Validator)
     - @Override
	     
		 1. supports(Class<?> clazz) -> return OrderItem.class.isAssignableFrom(clazz);
		 
		 2. validate(Object target, Errors errors) -> {
		    
		      1. OrderItem orderItem = (OrderItem)target;  // 驗證物件
			  
			  2. if(購買數量 == 0 or == null) -> errors.rejectValue("amount", "order_item.amount.required", "請輸入正確數量");
			  
			  3. else{ 
			       
				   1. 取得購買清單購買的商品資訊 :
				      Inventory inventory = productRepository.findInventoryById(orderItem.getProduct().getId()); 
					
                   2. int remaining = 0; // 預設目前庫存

                   3. 設定庫存 : if(銷售量 == 0) -> remaining = 進貨量
                                 else            -> remaining = 進貨量 - 銷售量
                                 if(購買量 > remaining) -> errors.rejectValue("amount", "inventory.amount.insufficient", "目前庫存數量不足（庫存：" + remaining + "）");
             		}
			      }catch   
                   errors.rejectValue("amount", "inventory.amount.error", "此商品無進貨資料無法計算庫存");

6. validator 套入 OrderItem addItem -> inventoryValidator.validate(orderItem, result); // 前端記得顯示錯誤				   


-------------------------------------------------------------------------------------------------------------------
JPA 自加方法 :
範例 :
    @Query(nativeQuery = true , value = "SELECT a FROM Asset a WHERE a.invid = ?1")
    public List<Asset> findByInvid(@Param("invid") Integer invid);

-------------------------------------------------------------------------------------------------------------------
Header :
  <header xmlns:th="http://www.thymeleaf.org" th:fragment="header">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
	<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet"/>	
  </header>

footer :
  <header xmlns:th="http://www.thymeleaf.org" th:fragment="footer">
	<p />
  	<div style="text-align:center">簡易PSI系統練習</div>
  </header>

navbar 選單 : 查看 navbar.txt 

-------------------------------------------------------------------------------------------------------------------
HTML 模板 :
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
<meta charset="UTF-8">
<title>Page</title>

 <!-- Header 區 -->
 <th:block th:include="./include/header :: header"></th:block>
</head>
<body>
 <!-- 選單區 -->
 <th:block th:include="./include/navbar :: navbar"></th:block>
 
 <!-- Context區 -->
 <div class="container">
  <h1> 頁面</h1>
  <br />
  <form  action="#" th:action="@{//}" th:object="${}" th:method="${_method}">
    <div class="form-group">
       <input type="hidden" th:field="*{id}" />
         <label style="font-size: 20px;">部門名稱 :</label>
       <input type="text" th:field="*{name}" id="name" class="form-control" placeholder="請輸入名稱" />
      </div>
  </form>
 </div>
 <!-- footer區 -->
 <th:block th:include="./include/footer :: footer"></th:block>
</body>
</html>
-------------------------------------------------------------------------------------------------------------------
HTML 模板(purchaseItem / OrderItem) :
 <!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
<meta charset="UTF-8">
<title>DepartmentPage</title>
<script th:inline="javascript">
    var message = /*[[${message}]]*/
    console.log(message);
    if(message != null){
    	alert(message);
    }
    
    var resultMsg = /*[[${resultMsg}]]*/
        console.log(resultMsg);
    if(resultMsg != null){
    	alert(resultMsg);
    }    
    
</script>
 <!-- Header 區 -->
 <th:block th:include="./include/header :: header"></th:block>
</head>
<body>
 <!-- 選單區 -->
 <th:block th:include="./include/navbar :: navbar"></th:block>
 
 <!-- Context區 -->
 
 <div class="container my-2">
  <h1>Purchase 主檔資料</h1>
  <br />
  <table border="1" class="table table-striped table-responsive-md">
			<thead>
				<tr>
					
				</tr>
			</thead>
			<tbody>
				<tr>
					
				</tr>
			</tbody>
		</table>
        <p />
		<h1>PurchaseItem 明細資料</h1>
		<table border="1" class="table table-striped table-responsive-md">
			<thead>
				<tr>
				</tr>
			</thead>
			<tbody>
				<tr th:each="item, itemstat:${purchase.purchaseItems}">
				</tr>
			</tbody>
		</table>
	</div>
  <br />
 <!-- footer區 -->
 <th:block th:include="./include/footer :: footer"></th:block>
</body>
</html>

-------------------------------------------------------------------------------------------------------------------
View 模板 :
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
<meta charset="UTF-8">
<title>SupplierPage</title>
<script th:inline="javascript">
   
 </script>

 <!-- Header 區 -->
 <th:block th:include="./include/header :: header"></th:block>
</head>
<body>
 <!-- 選單區 -->
 <th:block th:include="./include/navbar :: navbar"></th:block>
 
 <!-- Context區 -->
 
 <div class="container my-2">
  <h1>Inventory 頁面</h1>
  <h1>商品動態庫存資料檢視</h1>
		
		<table border="1" class="table table-striped table-responsive-md">
			<thead>
				<tr>
					<th>序號</th>
					<th>商品名稱</th>
					<th>商品成本</th>
					<th>商品售價</th>
					<th>採購數量</th>
					<th>銷售數量</th>
					<th>剩餘數量</th>
				</tr>
			</thead>
			<tbody>
				<tr th:each="inventory : ${inventories}">
					<td th:text="${inventory.id}"></td>
					<td th:text="${inventory.name}"></td>
					<td th:text="${inventory.cost}"></td>
					<td th:text="${inventory.price}"></td>
					<td>
					 <span th:switch="${inventory.amount1}">
					  <span th:case= null >0</span>
					  <span th:case="*">
					   <font th:text="${inventory.amount1}"></font>
					  </span>
					 </span>
					</td>
					<td>
					 <span th:switch="${inventory.amount2}">
					  <span th:case= null >0</span>
					  <span th:case="*">
					   <font th:text="${inventory.amount2}"></font>
					  </span>
					 </span>
					</td>
					<td>
					 <span th:if="${inventory.amount2} == null">
					  <font th:text="${inventory.amount1}"></font>
					 </span>
					 <span th:if="${inventory.amount2} != null">
					  <font th:text="${inventory.amount1 - inventory.amount2}"></font>
					 </span>
					</td>
				</tr>
			</tbody>
		</table>
 </div>
 <!-- footer區 -->
 <th:block th:include="./include/footer :: footer"></th:block>
</body>
</html>
-------------------------------------------------------------------------------------------------------------------
Thy googleChart

<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
<meta charset="UTF-8">
<title>SupplierPage</title>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<script type="text/javascript" th:inline="javascript"> 
google.charts.load('current', {'packages':['corechart']}); // 固定
google.charts.setOnLoadCallback(drawChart);                // 固定


function drawChart() {
	OrderItemAmount(1); // 銷售
	PurchaseItemAmount(1);
}


function OrderItemAmount(chartId) {
	var data = google.visualization.arrayToDataTable([ // 固定
        ['Name', '銷售量'],                           // key and Value
        
        /*[# th:each="row : ${inventories}"]*/
        
        ['[[${row.name}]]', [[${row.amount2}]]],
        
        /*[/]*/
    ]);
    
	var options = {
		title: '銷售量'                                // 標題
	};
	
	var chart = new google.visualization.BarChart(document.getElementById('piechart'));
	switch(chartId) {
	case 2:
		chart = new google.visualization.PieChart(document.getElementById('piechart'));
		break;
	case 3:
		chart = new google.visualization.ColumnChart(document.getElementById('piechart'));
		break;
	case 4:
		chart = new google.visualization.LineChart(document.getElementById('piechart'));
		break;	
    }

       chart.draw(data, options);
	
}  

function PurchaseItemAmount(chartId) {
	var data = google.visualization.arrayToDataTable([ // 固定
        ['Name', '進貨量'],                           // key and Value
        
        /*[# th:each="row : ${inventories}"]*/
        
        ['[[${row.name}]]', [[${row.amount1}]]],
        
        /*[/]*/
    ]);
    
	var options = {
		title: '進貨量'                                // 標題
	};
	
	var chart = new google.visualization.BarChart(document.getElementById('piechart2'));
	switch(chartId) {
	case 2:
		chart = new google.visualization.PieChart(document.getElementById('piechart2'));
		break;
	case 3:
		chart = new google.visualization.ColumnChart(document.getElementById('piechart2'));
		break;
	case 4:
		chart = new google.visualization.LineChart(document.getElementById('piechart2'));
		break;	
    }

       chart.draw(data, options);
	
}  

</script>

<!-- Header 區 -->
<th:block th:include="./include/header :: header"></th:block>
</head>
<body>
	<!-- 選單區 -->
	<th:block th:include="./include/navbar :: navbar"></th:block>

	<!-- Context區 -->


	<body>
	<h1>Google Charts With Thymeleaf</h1>
      
	 <td valign="top">
				<form class="pure-form">
					<fieldset>
						<legend>
							Order Chart |
							<a href="#" onclick="OrderItemAmount(1)">bar</a> |
							<a href="#" onclick="OrderItemAmount(2)">pie</a> |
							<a href="#" onclick="OrderItemAmount(3)">column</a> |
							<a href="#" onclick="OrderItemAmount(4)">line</a>
						</legend>
						<div id="piechart" style="width: 500px; height: 300px;"></div>
					</fieldset>
				</form>
	  </td>	
	  
	  <td valign="top">
				<form class="pure-form">
					<fieldset>
						<legend>
							Purchase Chart |
							<a href="#" onclick="PurchaseItemAmount(1)">bar</a> |
							<a href="#" onclick="PurchaseItemAmount(2)">pie</a> |
							<a href="#" onclick="PurchaseItemAmount(3)">column</a> |
							<a href="#" onclick="PurchaseItemAmount(4)">line</a>
						</legend>
						<div id="piechart2" style="width: 500px; height: 300px;"></div>
					</fieldset>
				</form>
	  </td>		
	  		
	</body>
    
    <!-- footer區 -->
	<th:block th:include="./include/footer :: footer"></th:block>
</body>

</html>