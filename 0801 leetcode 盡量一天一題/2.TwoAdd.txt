class Solution {
    // 使用預測指針 主針 pre -> 預測針 cur 得知 cur = pre
    // 回傳為3列的總和   sum -> sum -> sum // 紀錄總和值
    // 再把目前的預測針往前指向最新紀錄的(sum)
    // 只要一列不為空就可以執行 , 空則補 0 , 取值.val
    // 處理進位 , 有進位並記錄
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
      ListNode pre = new ListNode(0);
      ListNode cur = pre;
      int carry = 0;
      while(l1 != null || l2 != null){
       int x = l1 != null ? l1.val : 0;
       int y = l2 != null ? l2.val : 0;
       int sum = x + y + carry;
       carry = sum/10;
       sum   = sum %10;
       cur.next = new ListNode(sum);
       cur = cur.next;
        if(l1 != null){
             l1 = l1.next;
         }
         
         
         if(l2 != null){
           l2= l2.next;
       }
       
        if(carry==1){
            cur.next = new ListNode(carry);
        }
      }
      return pre.next;
    }
}